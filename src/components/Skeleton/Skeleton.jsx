import styles from './styles.module.css';

export default function Skeleton({ count = 1, type = 'banner', direction='column' }) {
    return (
        <>
            {/* 
                ? - это условный(тернарный оператор).
                Данный оператор обязательно принимает 3 операнда:
                1. Условие за которым следует знак вопроса (?)
                2. Выражение, которое выполняется, если условие истинно, сопровождается двоеточием(:)
                3. Выражение, которое выполняется, если условие ложно.

                Он часто используется в качестве сокращённого варианта инструкции if...else
            */}
            { count > 1 ? (
                <ul className={ direction === 'column' ? styles.columnList : styles.rowList }>
                    {/* 
                        Символ "_" в аргументах - это переменная которая используется как placeholder для аргумента, 
                        который не будет использован в теле функции. В данном случае, это соглашение, которое показывает, 
                        что первый аргумент функции не нужен, и на него не будет ссылок внутри функции. 

                        map() — это метод массива, который вызывает переданную функцию для каждого элемента массива.
                        Функция, которую принимает map(), получает два аргумента:
                            Первый аргумент — это элемент массива (зачастую называемый, например, element).
                            Второй аргумент — это индекс этого элемента (называется, например, index).

                        Если вы не планируете использовать первый аргумент (элемент массива), но вам нужен второй 
                        аргумент (индекс), то разработчики часто используют "_", чтобы явно показать, что первый 
                        аргумент игнорируется.
                    */}
                    {/* 
                        [...Array(count)] - это сокращённая форма записи создание массива с пустыми значениями.
                        1. С помощью Array(count) мы создаём массив с количеством элементов count.
                        2. После с помощью оператора расширения мы созданный массив разбиваем на элементы из которых он состоит
                        3. И полученные элементы заключаем в массив квадратными скобками.
                    */}
                    {[...Array(count)].map((_, index) => (
                        <li 
                            key={ index }
                            className={ type === 'banner' ? styles.banner : styles.item }
                        ></li>
                    ))}
                </ul>
            ) : (
                <li className={ type === 'banner' ? styles.banner : styles.item }></li>
            )}
        </>
    );
}
